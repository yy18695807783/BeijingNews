package com.atguigu.addsubviewdemo;

import android.content.Context;
import android.graphics.drawable.Drawable;
import android.os.Build;
import android.support.v7.widget.TintTypedArray;
import android.util.AttributeSet;
import android.view.View;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;

/**
 * Created by 颜银 on 2016/10/26.
 * QQ:443098360
 * 微信：y443098360
 * 作用：
 */
public class AddSubView extends LinearLayout implements View.OnClickListener {

    private Button btn_sub;
    private TextView tv_value;
    private Button btn_add;

    private final Context context;

    /**
     * 默认值
     */
    private int value = 1;
    /**
     * 最小智
     */
    private int minValue = 1;
    /**
     * 最大值（仓库存储量）
     */
    private int maxValue = 10;

    public AddSubView(Context context) {
        this(context, null);
    }

    public AddSubView(Context context, AttributeSet attrs) {
        this(context, attrs, 0);
    }

    public AddSubView(Context context, AttributeSet attrs, int defStyleAttr) {
        super(context, attrs, defStyleAttr);
        this.context = context;
        //把布局R.layout.add_sub_number_view添加到NumberAddSubView类中
        View.inflate(context, R.layout.add_sub_view, AddSubView.this);
        btn_sub = (Button) findViewById(R.id.btn_sub);
        tv_value = (TextView) findViewById(R.id.tv_value);
        btn_add = (Button) findViewById(R.id.btn_add);

        btn_sub.setOnClickListener(this);
        btn_add.setOnClickListener(this);


        if (attrs != null) {
            TintTypedArray tintTypedArray = TintTypedArray.obtainStyledAttributes(context, attrs, R.styleable.AddSubView);

            int value = tintTypedArray.getInt(R.styleable.AddSubView_value, 0);
            if (value > 0) {
                setValue(value);
            }

            int minValue = tintTypedArray.getInt(R.styleable.AddSubView_minValue, 0);
            if (minValue > 0) {
                setValue(minValue);
            }

            int maxValue = tintTypedArray.getInt(R.styleable.AddSubView_maxValue, 0);
            if (maxValue > 0) {
                setValue(maxValue);
            }

            Drawable number_background = tintTypedArray.getDrawable(R.styleable.AddSubView_number_background);
            if (number_background != null) {
                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) {
                    this.setBackground(number_background);
                }
            }

            Drawable add_background = tintTypedArray.getDrawable(R.styleable.AddSubView_add_background);
            if (add_background != null) {
                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) {
                    btn_add.setBackground(add_background);
                }
            }

            Drawable sub_background = tintTypedArray.getDrawable(R.styleable.AddSubView_sub_background);
            if (sub_background != null) {
                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) {
                    btn_sub.setBackground(sub_background);
                }
            }

        }
    }

    public int getValue() {
        return value;
    }

    public void setValue(int value) {
        this.value = value;
        //千万注意 tv_value设置的是字符串  value是int值 要变换成字符串
        tv_value.setText(value + "");
    }

    public int getMinValue() {
        return minValue;
    }

    public void setMinValue(int minValue) {
        this.minValue = minValue;
    }

    public int getMaxValue() {
        return maxValue;
    }

    public void setMaxValue(int maxValue) {
        this.maxValue = maxValue;
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()) {
            case R.id.btn_sub:
                subNumber();
                if (onButtonSubAddChangeListener != null) {
                    onButtonSubAddChangeListener.onButtonSubChange(v, value);
                }
                break;
            case R.id.btn_add:
                addNumber();
                if (onButtonSubAddChangeListener != null) {
                    onButtonSubAddChangeListener.onButtonAddChange(v, value);
                }
                break;
        }
    }

    /**
     * 增加
     */
    private void addNumber() {
        if (value < maxValue) {
            value++;
        }
        setValue(value);
    }

    /**
     * 减少
     */
    private void subNumber() {
        if (value > minValue) {
            value--;
        }
        setValue(value);
    }

    /**
     * 点击按钮回调的监听
     */
    public interface OnButtonSubAddChangeListener {
        /**
         * 当点击 减 按钮时的回调方法
         *
         * @param v
         * @param value
         */
        void onButtonSubChange(View v, int value);

        /**
         * 当点击 加 按钮时的回调方法
         *
         * @param v
         * @param value
         */
        void onButtonAddChange(View v, int value);
    }

    private OnButtonSubAddChangeListener onButtonSubAddChangeListener;

    /**
     * 设置点击增加和减少的监听方法
     *
     * @param onButtonSubAddChangeListener
     */
    public void setOnButtonSubAddChangeListener(OnButtonSubAddChangeListener onButtonSubAddChangeListener) {
        this.onButtonSubAddChangeListener = onButtonSubAddChangeListener;
    }
}
