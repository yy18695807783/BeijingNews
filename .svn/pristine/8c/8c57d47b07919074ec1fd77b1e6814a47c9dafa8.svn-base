package com.atguigu.beijingnews;

import android.app.Application;
import android.content.Context;
import android.os.Environment;

import com.atguigu.beijingnews.volley.VolleyManager;
import com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator;
import com.nostra13.universalimageloader.core.ImageLoader;
import com.nostra13.universalimageloader.core.ImageLoaderConfiguration;
import com.nostra13.universalimageloader.core.assist.QueueProcessingType;
import com.zhy.http.okhttp.OkHttpUtils;

import org.xutils.common.util.LogUtil;
import org.xutils.x;

import java.io.File;
import java.util.HashMap;
import java.util.Map;

import cn.jpush.android.api.JPushInterface;

/**
 * Created by 颜银 on 2016/10/16.
 * QQ:443098360
 * 微信：y443098360
 * 作用：
 */
public class BeijingNewApplaction extends Application {
    @Override
    public void onCreate() {
        super.onCreate();
        //xUtils初始化
        x.Ext.init(this);
        x.Ext.setDebug(true);
        //volley新的初始化
        VolleyManager.init(this);

        //激光推送初始化
        JPushInterface.setDebugMode(true); 	// 设置开启日志,发布时请关闭日志
        JPushInterface.init(this);     		// 初始化 JPush

        //ImageLoader初始化
        initImageLoader(this);


        //android监听软件异常崩溃 的初始化
        CrashHandler catchHandler = CrashHandler.getInstance();
        catchHandler.init(getApplicationContext());

        //上传错误到服务器
        uploadFile();
    }
    public static void initImageLoader(Context context) {
        // This configuration tuning is custom. You can tune every option, you may tune some of them,
        // or you can create default configuration by
        //  ImageLoaderConfiguration.createDefault(this);
        // method.
        ImageLoaderConfiguration.Builder config = new ImageLoaderConfiguration.Builder(context);
        config.threadPriority(Thread.NORM_PRIORITY - 2);
        config.denyCacheImageMultipleSizesInMemory();
        config.diskCacheFileNameGenerator(new Md5FileNameGenerator());
        config.diskCacheSize(50 * 1024 * 1024); // 50 MiB
        config.tasksProcessingOrder(QueueProcessingType.LIFO);
        config.writeDebugLogs(); // Remove for release app

        // Initialize ImageLoader with configuration.
        ImageLoader.getInstance().init(config.build());
    }


    public void uploadFile(){

        File file = new File(Environment.getExternalStorageDirectory()+"/beijingnews/crash", "MyException.log" );
        //storage/sdcard/beijingnews/crash/MyException.log
        LogUtil.e(file.getAbsolutePath().toString());
        if (! file.exists ()){
//            Toast.makeText(MainActivity.this, " 文件不存在，请修改文件路径 ", Toast.LENGTH_SHORT). show();
            LogUtil.e("文件不存在，请修改文件路径 ");
            return;
        }
        Map<String, String> params = new HashMap<>();
        params .put("username", "yanyin");
        params .put("password", "123");

        Map <String, String> headers = new HashMap <>();
        headers .put("APP-Key", "APP-Secret222");
        headers .put("APP-Secret", "APP-Secret111");

        String url = "http://192.168.12.54:8080/FileUpload/index.jsp" ;

        OkHttpUtils.post()//
                .addFile("mFile", "MyException_01.log", file)//
                . url(url )//
                .params(params )//
                .headers(headers )//
                . build();

        LogUtil.e("上传成功");
    }


}
